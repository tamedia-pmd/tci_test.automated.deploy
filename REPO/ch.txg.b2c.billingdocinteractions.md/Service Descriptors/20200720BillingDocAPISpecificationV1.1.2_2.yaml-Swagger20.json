{
  "swagger": "2.0",
  "info": {
    "version": "1.1.2",
    "title": "Swissbilling.Gateways.T5A",
    "description": "API specification for T5A Bill-to-cash integration with Swissbilling",
    "contact": {
      "email": "alala@swissbilling.ch"
    }
  },
  "host": "t5a-staging.swissbilling.ch",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "https://security-staging.swissbilling.ch/connect/token",
      "scopes": {
        "t5a_service": "T5A Gateway service access scope"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/BillingDoc": {
      "post": {
        "description": "Transfer a single billing document to be handled by the Invoice Manager",
        "summary": "transferBillingDoc",
        "tags": [
          "BillingDoc"
        ],
        "operationId": "transferBillingDoc",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "if true, do not create a BillingDoc, but do the first and second level validations and show the results"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingDocCreationResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BillingDocCreationResult"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/RevenueAccruals": {
      "post": {
        "description": "Transfer a list of revenue accruals",
        "summary": "transferRevenueAccruals",
        "tags": [
          "RevenueAccruals"
        ],
        "operationId": "transferRevenueAccruals",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RevenueAccruals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RevenueAccrualsCreatedResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/RevenueAccrualsCreatedResult"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/BillingAction": {
      "post": {
        "description": "Transfer an action to be handled by the Invoice Manager",
        "summary": "postBillingAction",
        "tags": [
          "Interactions"
        ],
        "operationId": "postBillingAction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/companies/{companyCode}/BillingCustomer/{customerId}": {
      "get": {
        "description": "Retrieve customer details identified by its id",
        "summary": "getBillingCustomer",
        "tags": [
          "Interactions"
        ],
        "operationId": "getBillingCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "description": "company code"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Customer identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingCustomerResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          },
          "404": {
            "description": "Customer not found",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/companies/{companyCode}/BillingDocList": {
      "get": {
        "description": "Retrieve billing documents by provided criterias",
        "summary": "getBillingDocList",
        "tags": [
          "Interactions"
        ],
        "operationId": "getBillingDocList",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "description": "company code"
          },
          {
            "name": "debtorCRMID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "debtor CRM identifier"
          },
          {
            "name": "docStatus",
            "in": "query",
            "required": false,
            "enum": [
              "all",
              "draft",
              "active",
              "stop",
              "error",
              "reject",
              "close"
            ],
            "default": "all",
            "type": "string",
            "description": "document status"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "required": false,
            "enum": [
              "all",
              "open",
              "paid"
            ],
            "default": "all",
            "type": "string",
            "description": "payment status"
          },
          {
            "name": "workflowStatus",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "workflow status to retrieve, if not provided retrieve all"
          },
          {
            "name": "stopMode",
            "in": "query",
            "required": false,
            "enum": [
              "all",
              "autoStop",
              "manuStop",
              "collectionStop"
            ],
            "default": "all",
            "type": "string",
            "description": "reason for document beeing stopped"
          },
          {
            "name": "afterDunning",
            "in": "query",
            "required": false,
            "enum": [
              "all",
              "autoStop",
              "manuStop",
              "collectionStop",
              "toCheck"
            ],
            "default": "all",
            "type": "string",
            "description": "documents in afterDunning procedure"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingDocListResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          },
          "403": {
            "description": "Forbidden request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/companies/{companyCode}/BillingDocNum/{docNum}": {
      "get": {
        "description": "Retrieve billing doc details by its unique identifier",
        "summary": "getBillingDocNum",
        "tags": [
          "Interactions"
        ],
        "operationId": "getBillingDocNum",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "description": "company code"
          },
          {
            "name": "docNum",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "unique id of document (ex. InvoiceNum) as used by business unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingDocNumResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          },
          "403": {
            "description": "Forbidden request",
            "schema": {}
          },
          "404": {
            "description": "Not found",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/companies/{companyCode}/BillingDelivery": {
      "get": {
        "description": "Retrieve delivery reports created between the set interval",
        "summary": "getBillingDelivery",
        "tags": [
          "Interactions"
        ],
        "operationId": "getBillingDelivery",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "description": "company code"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "date time of the start of the interval"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "date time of the end of the interval"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingDeliveryResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    },
    "/api/companies/{companyCode}/BillingEvents": {
      "get": {
        "description": "Retrieve all events that occured between two dates",
        "summary": "getBillingEvents",
        "tags": [
          "Interactions"
        ],
        "operationId": "getBillingEvents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "description": "company code"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "date time of the start of the interval"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "date time of the end of the interval"
          },
          {
            "name": "minEventID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "minimum event identifier to retrieve"
          },
          {
            "name": "maxEventID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "maximum event identifier to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BillingEventsResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": [
              "t5a_service"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "BaseResponse": {
      "title": "BaseResponse",
      "type": "object",
      "properties": {
        "success": {
          "description": "True if the operation was successful, false otherwise",
          "type": "boolean"
        },
        "errorCode": {
          "description": "Error code",
          "type": "string"
        },
        "errorList": {
          "description": "List of errors when the operation was not successful",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of company or person",
          "type": "string"
        },
        "attentionOf": {
          "description": "name of recipient person",
          "type": "string"
        },
        "line1": {
          "description": "adress line #1",
          "type": "string"
        },
        "line2": {
          "description": "adress line #2, if any",
          "type": "string"
        },
        "countryCode": {
          "description": "country code (CH,LI,DE,FR,IT)",
          "example": "CH",
          "type": "string",
          "default": "CH"
        },
        "zipCode": {
          "description": "zipcode for city",
          "type": "string"
        },
        "city": {
          "description": "name of city",
          "type": "string"
        },
        "mailAdr": {
          "description": "mail address for contact",
          "type": "string"
        },
        "phoneNum": {
          "description": "phone number for contact",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "BillingDoc": {
      "title": "BillingDoc",
      "type": "object",
      "properties": {
        "general": {
          "$ref": "#/definitions/General"
        },
        "process": {
          "$ref": "#/definitions/Process"
        },
        "addresses": {
          "$ref": "#/definitions/Addresses"
        },
        "layout": {
          "$ref": "#/definitions/Layout"
        },
        "delivery": {
          "$ref": "#/definitions/Delivery1"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "attachments": {
          "description": "list of attachments to document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "payload": {
          "$ref": "#/definitions/Payload"
        }
      }
    },
    "RevenueAccruals": {
      "title": "RevenueAccruals",
      "type": "object",
      "properties": {
        "general": {
          "$ref": "#/definitions/General1"
        },
        "revenueItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RevenueItem1"
          }
        }
      }
    },
    "BillingCustomerResult": {
      "title": "BillingCustomerResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "customerId": {
              "type": "string",
              "pattern": "\\S{1,}"
            },
            "docList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocList"
              }
            },
            "totalList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingAmount"
              }
            }
          },
          "required": [
            "customerId"
          ]
        }
      ]
    },
    "DeliveryReport": {
      "title": "DeliveryReport",
      "type": "object",
      "properties": {
        "deliveryDate": {
          "type": "string",
          "format": "date-time"
        },
        "deliveryChannel": {
          "$ref": "#/definitions/DeliveryChannel"
        },
        "deliveryType": {
          "$ref": "#/definitions/DeliveryType"
        },
        "deliveryStatus": {
          "$ref": "#/definitions/DeliveryStatus"
        },
        "isPrimary": {
          "description": "true if is primary delivery channel, false otherwise",
          "type": "boolean"
        },
        "postalAddress": {
          "$ref": "#/definitions/Address"
        },
        "emailAddress": {
          "description": "destination email address, if delivery channel is eMail",
          "type": "string"
        },
        "emailType": {
          "$ref": "#/definitions/EmailType"
        },
        "billingInfo": {
          "$ref": "#/definitions/BillingInfo"
        },
        "billingStatus": {
          "$ref": "#/definitions/BillingStatus"
        }
      }
    },
    "BillingDocCreationResult": {
      "title": "BillingDocCreationResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "docNum": {
              "description": "Unique invoice identifier, provided by the Business Unit",
              "type": "string"
            }
          }
        }
      ]
    },
    "BillingDocListResult": {
      "title": "BillingDocListResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "docList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocList1"
              }
            }
          }
        }
      ]
    },
    "BillingDocNumResult": {
      "title": "BillingDocNumResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "billingInfo": {
              "$ref": "#/definitions/BillingInfo"
            },
            "billingStatus": {
              "$ref": "#/definitions/BillingStatus"
            },
            "billingBalance": {
              "$ref": "#/definitions/BillingBalance"
            },
            "billingDoc": {
              "$ref": "#/definitions/BillingDoc"
            },
            "billingEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingEvent"
              }
            }
          }
        }
      ]
    },
    "BillingStatus": {
      "title": "BillingStatus",
      "type": "object",
      "properties": {
        "statusMode": {
          "$ref": "#/definitions/StatusMode"
        },
        "statusDate": {
          "description": "timestamp for actual status",
          "type": "string",
          "format": "date-time"
        },
        "deliveryDate": {
          "description": "delivery date for document",
          "type": "string",
          "format": "date-time"
        },
        "workflowStep": {
          "description": "step in workflow 1..99 as 1..9=draft, 10=delivered, 11..19 reminders, 20..29 after dunning, 30..39 collection",
          "type": "number",
          "format": "double"
        },
        "workflowDate": {
          "description": "timestamp for actual workflow stop",
          "type": "string",
          "format": "date-time"
        },
        "collectionAction": {
          "description": "collection last action",
          "type": "string"
        },
        "collectionClosing": {
          "description": "collection closing reason",
          "type": "string"
        },
        "stopMode": {
          "$ref": "#/definitions/StopMode"
        },
        "stopMessage": {
          "description": "message for stopping, ex. person who stopped",
          "type": "string"
        },
        "errorMode": {
          "$ref": "#/definitions/ErrorMode"
        },
        "errorMessage": {
          "description": "detailled error message",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rejectMode": {
          "$ref": "#/definitions/RejectMode"
        },
        "rejectMessage": {
          "description": "message for reject",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rejectDate": {
          "description": "timestamp for rejection, delivery date otherwise",
          "type": "string",
          "format": "date-time"
        },
        "closeMode": {
          "$ref": "#/definitions/CloseMode"
        },
        "closeMessage": {
          "description": "message for closing document",
          "type": "string"
        }
      }
    },
    "BillingInfo": {
      "title": "BillingInfo",
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "company code of sender (ex. C123)",
          "type": "string"
        },
        "docNum": {
          "description": "uid of document (InvoiceNum) without CompanyPrefix",
          "type": "string"
        },
        "docDate": {
          "description": "date of document",
          "type": "string",
          "format": "date"
        },
        "docURL": {
          "description": "url of document on TX DMS",
          "type": "string"
        },
        "docLanguage": {
          "$ref": "#/definitions/DocLanguage1"
        },
        "docType": {
          "$ref": "#/definitions/DocType"
        },
        "debtorCRMID": {
          "description": "customer ID for collectable debtor",
          "type": "string"
        },
        "customerName": {
          "description": "customer's fullname",
          "type": "string"
        }
      }
    },
    "BillingAmount": {
      "title": "BillingAmount",
      "type": "object",
      "properties": {
        "currency": {
          "description": "currency (CHF, EUR, USD, GBP)",
          "example": "CHF",
          "type": "string",
          "default": "CHF"
        },
        "netAmount": {
          "description": "amount excluding vat",
          "type": "number",
          "format": "double"
        },
        "vatAmount": {
          "description": "calculated vat amount",
          "type": "number",
          "format": "double"
        },
        "totalAmount": {
          "description": "amount including vat",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BillingBalance": {
      "title": "BillingBalance",
      "type": "object",
      "properties": {
        "currency": {
          "description": "document currency (CHF, EUR, USD, GBP)",
          "example": "CHF",
          "type": "string",
          "default": "CHF"
        },
        "totalAmount": {
          "description": "invoice total amount including tax",
          "type": "number",
          "format": "double"
        },
        "openAmount": {
          "description": "invoice open amount",
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "due date of the document",
          "type": "string",
          "format": "date-time"
        },
        "paidDate": {
          "description": "timestamp of last payment",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BillingEventsResult": {
      "title": "BillingEventsResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "eventList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingEvent"
              }
            }
          }
        }
      ]
    },
    "BillingEvent": {
      "title": "BillingEvent",
      "type": "object",
      "properties": {
        "eventID": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "eventDate": {
          "type": "string",
          "format": "date-time"
        },
        "eventAmount": {
          "$ref": "#/definitions/BillingAmount"
        },
        "openAmount": {
          "$ref": "#/definitions/BillingAmount"
        },
        "billingInfo": {
          "$ref": "#/definitions/BillingInfo"
        },
        "billingStatus": {
          "$ref": "#/definitions/BillingStatus"
        },
        "billingBalance": {
          "$ref": "#/definitions/BillingBalance"
        }
      }
    },
    "BillingAction": {
      "title": "BillingAction",
      "type": "object",
      "properties": {
        "general": {
          "$ref": "#/definitions/General2"
        },
        "body": {
          "$ref": "#/definitions/Body"
        }
      }
    },
    "RevenueAccrualsCreatedResult": {
      "title": "RevenueAccrualsCreatedResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "docNum": {
              "description": "Unique identifier, provided by the Business Unit",
              "type": "string"
            },
            "RevenueAccruals": {
              "$ref": "#/definitions/RevenueAccruals"
            }
          }
        }
      ]
    },
    "BillingDeliveryResult": {
      "title": "BillingDeliveryResult",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object",
          "properties": {
            "deliveryList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryReport"
              }
            }
          }
        }
      ]
    },
    "AcquirerName": {
      "title": "AcquirerName",
      "description": "acquirer of transaction",
      "type": "string",
      "enum": [
        "AMX",
        "DIN",
        "ECA",
        "VIS",
        "APL",
        "PAY",
        "MAU",
        "PAP",
        "PFC",
        "PEF",
        "ESY",
        "SWB",
        "TWI"
      ]
    },
    "Addresses": {
      "title": "Addresses",
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/Sender"
        },
        "recipient": {
          "$ref": "#/definitions/Recipient"
        }
      }
    },
    "afterDunning": {
      "title": "afterDunning",
      "type": "string",
      "enum": [
        "all",
        "autoStop",
        "manuStop",
        "collectionStop",
        "toCheck"
      ]
    },
    "Attachment": {
      "title": "Attachment",
      "type": "object",
      "properties": {
        "attachmentName": {
          "description": "attachment title (ex. Report, AGB)",
          "type": "string"
        },
        "fileSource": {
          "$ref": "#/definitions/FileSource"
        },
        "fileType": {
          "$ref": "#/definitions/FileType"
        },
        "fileBase64": {
          "description": "attachment base64 encoded",
          "type": "string"
        },
        "fileName": {
          "description": "name of attachment in OMS",
          "type": "string"
        },
        "fileURL": {
          "description": "url of attachment",
          "type": "string"
        },
        "archive": {
          "description": "add attachment to archive file (YES/no)",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "deliverWithPrint": {
          "description": "send attachment in postal mail (YES/no)",
          "example": true,
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "attachmentName",
        "fileSource"
      ]
    },
    "BlockTotal": {
      "title": "BlockTotal",
      "type": "object",
      "properties": {
        "totalText": {
          "description": "text for block total line (if non standard)",
          "type": "string"
        },
        "totalAmount": {
          "description": "block total amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Body": {
      "title": "Body",
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/Operation"
        },
        "resendDocType": {
          "$ref": "#/definitions/ResendDocType"
        },
        "resendChannel": {
          "$ref": "#/definitions/ResendChannel"
        },
        "resendPostageType": {
          "$ref": "#/definitions/ResendPostageType"
        },
        "resendMailAddress": {
          "description": "mail address for immediate resend",
          "type": "string"
        },
        "extentionDays": {
          "description": "extension of payment terms (number of days)",
          "example": 10,
          "type": "integer",
          "default": 10,
          "format": "int32"
        }
      }
    },
    "BodyDocType": {
      "title": "BodyDocType",
      "description": "document body creation/source type",
      "type": "string",
      "enum": [
        "create",
        "sftp",
        "base64",
        "fromurl"
      ]
    },
    "CancellationType": {
      "title": "CancellationType",
      "description": "type of cancellation",
      "type": "string",
      "enum": [
        "wrongAddress",
        "wrongInvoice",
        "doubleInvoice",
        "unknown"
      ]
    },
    "Channel": {
      "title": "Channel",
      "description": "standard delivery channel",
      "type": "string",
      "enum": [
        "print",
        "email"
      ]
    },
    "CloseMode": {
      "title": "CloseMode",
      "description": "reason for closing document",
      "type": "string",
      "enum": [
        "none",
        "paid",
        "writeoff",
        "cancel",
        "other"
      ]
    },
    "Contact": {
      "title": "Contact",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of person or department",
          "type": "string"
        },
        "email": {
          "description": "mail address for contact",
          "type": "string"
        },
        "phone": {
          "description": "phone number to contact (ex. 041 444 22 11)",
          "type": "string"
        },
        "fax": {
          "description": "fax number to contact (ex. 041 444 22 12)",
          "type": "string"
        },
        "service": {
          "description": "service hours for customer service",
          "type": "string"
        }
      }
    },
    "ContactTitle": {
      "title": "ContactTitle",
      "description": "specific text for titles, if not standard",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "CreditNoteType": {
      "title": "CreditNoteType",
      "description": "type of credit note",
      "type": "string",
      "enum": [
        "standard",
        "barter",
        "inter",
        "intra"
      ]
    },
    "CustomGroup": {
      "title": "CustomGroup",
      "description": "customer grouping",
      "type": "string",
      "enum": [
        "B2B",
        "B2C"
      ]
    },
    "CustomGroup1": {
      "title": "CustomGroup1",
      "type": "string",
      "enum": [
        "B2B",
        "B2C"
      ]
    },
    "Delivery": {
      "title": "Delivery",
      "description": "delivery mode for document",
      "type": "string",
      "enum": [
        "standard",
        "fast",
        "no"
      ]
    },
    "Delivery1": {
      "title": "Delivery1",
      "type": "object",
      "properties": {
        "deliveryPlan": {
          "description": "name of delivery plan",
          "example": "standard",
          "type": "string",
          "default": "standard"
        },
        "channel": {
          "$ref": "#/definitions/Channel"
        },
        "postalDelivery": {
          "$ref": "#/definitions/PostalDelivery"
        },
        "emailDelivery": {
          "$ref": "#/definitions/EmailDelivery"
        }
      }
    },
    "DeliveryChannel": {
      "title": "DeliveryChannel",
      "description": "delivery channel for document",
      "type": "string",
      "enum": [
        "print",
        "eMail",
        "eBill"
      ]
    },
    "DeliveryStatus": {
      "title": "DeliveryStatus",
      "description": "status/error of delivery",
      "type": "string",
      "enum": [
        "ok",
        "error",
        "reject"
      ]
    },
    "DeliveryType": {
      "title": "DeliveryType",
      "description": "type of document",
      "type": "string",
      "enum": [
        "invoice",
        "reminder",
        "creditnote",
        "onlineorder",
        "paynote",
        "other"
      ]
    },
    "DocBody": {
      "title": "DocBody",
      "type": "object",
      "properties": {
        "blockTitle": {
          "description": "title for block, if available",
          "type": "string"
        },
        "orderTitle": {
          "description": "title for order block, if non-standard",
          "type": "string"
        },
        "orderText": {
          "description": "multi-line text for order block",
          "type": "string"
        },
        "periodTitle": {
          "description": "title for period, if non-standard",
          "type": "string"
        },
        "periodText": {
          "description": "text for period, if applicable",
          "type": "string"
        },
        "refTitle": {
          "description": "title for customer reference, if non-standard",
          "type": "string"
        },
        "refText": {
          "description": "multi-line text for customer reference",
          "type": "string"
        },
        "infoItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfoItem"
          }
        },
        "itemsTitles": {
          "$ref": "#/definitions/ItemsTitles"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "blockTotal": {
          "$ref": "#/definitions/BlockTotal"
        }
      }
    },
    "DocCancellation": {
      "title": "DocCancellation",
      "description": "additional information for cancellation",
      "type": "object",
      "properties": {
        "cancellationType": {
          "$ref": "#/definitions/CancellationType"
        },
        "cancelDocNum": {
          "description": "reference to document number for cancellation",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "cancellationReason": {
          "description": "reason of cancellation",
          "type": "string"
        }
      },
      "required": [
        "cancelDocNum"
      ]
    },
    "DocCreditNote": {
      "title": "DocCreditNote",
      "description": "additional information for credit notes",
      "type": "object",
      "properties": {
        "creditNoteType": {
          "$ref": "#/definitions/CreditNoteType"
        },
        "creditDocNum": {
          "description": "reference to invoice number for credit note",
          "type": "string"
        },
        "barterContractID": {
          "description": "reference to barter contract (ex. GG-1234)",
          "type": "string"
        },
        "icAffiliate": {
          "description": "Intercompany Affiliate (CompanyCode of IC counterparty)",
          "type": "string"
        },
        "icAssetCompany": {
          "description": "Asset Company (Workday Company Code = Cxxx)",
          "type": "string"
        }
      }
    },
    "DocCurrency": {
      "title": "DocCurrency",
      "description": "currency for document (CHF, EUR, USD, GBP)",
      "type": "string",
      "enum": [
        "CHF",
        "EUR",
        "USD",
        "GBP"
      ]
    },
    "DocFooter": {
      "title": "DocFooter",
      "type": "object",
      "properties": {
        "footerText": {
          "description": "specific text for footer (if non standard)",
          "type": "string"
        }
      }
    },
    "DocHeader": {
      "title": "DocHeader",
      "type": "object",
      "properties": {
        "docNumber": {
          "description": "number of document to be displayed (default = general > docNumber)",
          "type": "string"
        },
        "docDate": {
          "description": "issue date of document to be displayed (default = general > docDate)",
          "type": "string",
          "format": "date"
        },
        "customerNum": {
          "description": "customer number, if applicable",
          "type": "string"
        },
        "customerName": {
          "description": "customer name, if applicable",
          "type": "string"
        },
        "agencyNum": {
          "description": "agency number, if applicable",
          "type": "string"
        },
        "agencyName": {
          "description": "agency name, if applicable",
          "type": "string"
        },
        "barterNum": {
          "description": "barter contract number, if applicable",
          "type": "string"
        },
        "barterName": {
          "description": "barter contract counterparty name, if applicable",
          "type": "string"
        },
        "reference": {
          "description": "multi-line text for customer reference, if any",
          "type": "string"
        },
        "period": {
          "description": "text for invocing period, if applicable",
          "type": "string"
        }
      }
    },
    "DocHeaderTitle": {
      "title": "DocHeaderTitle",
      "description": "specific text for document title section, if non-standard",
      "type": "object",
      "properties": {
        "docNumber": {
          "type": "string"
        },
        "docDate": {
          "type": "string"
        },
        "customer": {
          "type": "string"
        },
        "agency": {
          "type": "string"
        },
        "barter": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "period": {
          "type": "string"
        }
      }
    },
    "DocInvoice": {
      "title": "DocInvoice",
      "description": "additional information for invoices",
      "type": "object",
      "properties": {
        "invoiceType": {
          "$ref": "#/definitions/InvoiceType"
        },
        "contractURL": {
          "description": "DMS URL for customer contract (needed for collection)",
          "type": "string"
        },
        "barterContractID": {
          "description": "reference to barter contract (ex. GG-1234), for invoiceType = barter",
          "type": "string"
        },
        "icAffiliate": {
          "description": "Intercompany affiliate (CC of IC counterparty) for invoiceType = inter,intra",
          "type": "string"
        },
        "icAssetCompany": {
          "description": "Asset Company (Workday Company Code = Cxxx)",
          "type": "string"
        },
        "bankTransID": {
          "description": "bank transaction ID for invoiceType = prepayment",
          "type": "string"
        }
      }
    },
    "DocLanguage": {
      "title": "DocLanguage",
      "description": "language for document creation (DE,FR,IT,EN)",
      "type": "string",
      "enum": [
        "DE",
        "FR",
        "IT",
        "EN"
      ]
    },
    "DocLanguage1": {
      "title": "DocLanguage1",
      "description": "language of document (DE,FR,IT,EN)",
      "type": "string",
      "enum": [
        "DE",
        "FR",
        "IT",
        "EN"
      ]
    },
    "DocList": {
      "title": "DocList",
      "type": "object",
      "properties": {
        "billingInfo": {
          "$ref": "#/definitions/BillingInfo"
        },
        "billingStatus": {
          "$ref": "#/definitions/BillingStatus"
        },
        "billingBalance": {
          "$ref": "#/definitions/BillingBalance"
        },
        "billingDoc": {
          "$ref": "#/definitions/BillingDoc"
        },
        "billingEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingEvent"
          }
        }
      }
    },
    "DocList1": {
      "title": "DocList1",
      "type": "object",
      "properties": {
        "billingInfo": {
          "$ref": "#/definitions/BillingInfo"
        },
        "billingStatus": {
          "$ref": "#/definitions/BillingStatus"
        },
        "billingBalance": {
          "$ref": "#/definitions/BillingBalance"
        },
        "debtorAddress": {
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address"
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address"
        },
        "primaryChannel": {
          "$ref": "#/definitions/PrimaryChannel"
        }
      }
    },
    "DocOnlineOrder": {
      "title": "DocOnlineOrder",
      "type": "object",
      "properties": {
        "merchantID": {
          "description": "merchantID used with payment provider for transaction authorization",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "acquirerName": {
          "$ref": "#/definitions/AcquirerName"
        },
        "orderID": {
          "description": "order ID of eCommerce system",
          "type": "string"
        },
        "transID": {
          "description": "transaction id of order for reconciliation",
          "type": "string"
        },
        "transDate": {
          "description": "order date+time of transaction",
          "type": "string",
          "format": "date-time"
        },
        "countryOfPayer": {
          "description": "country of debtor (IP/CC)",
          "type": "string",
          "pattern": "\\S{1,}"
        }
      },
      "required": [
        "merchantID",
        "acquirerName",
        "orderID",
        "transID",
        "transDate",
        "countryOfPayer"
      ]
    },
    "DocPayNote": {
      "title": "DocPayNote",
      "description": "additional information for paynote",
      "type": "object",
      "properties": {
        "payNoteType": {
          "$ref": "#/definitions/PayNoteType"
        },
        "payMode": {
          "$ref": "#/definitions/PayMode"
        },
        "payInDays": {
          "description": "payout in x days",
          "type": "integer",
          "format": "int32"
        },
        "payDate": {
          "description": "payout at indicated date",
          "type": "string",
          "format": "date"
        },
        "barterContractID": {
          "description": "reference to barter contract (ex. GG-1234), for invoiceType = barter",
          "type": "string"
        },
        "icAffiliate": {
          "description": "Intercompany affiliate (CC of IC counterparty) for invoiceType = inter,intra",
          "type": "string"
        },
        "recipientName": {
          "description": "name of paynote recipient",
          "type": "string"
        },
        "recipientBank": {
          "description": "bank of paynote recipient",
          "type": "string"
        },
        "recipientAccount": {
          "description": "account information of paynote recipient",
          "type": "string"
        },
        "recipientIBAN": {
          "description": "IBAN of paynote recipient",
          "type": "string"
        },
        "recipientESR": {
          "description": "ESR number for payment",
          "type": "string"
        },
        "recipientReference": {
          "description": "Reference for payment to recipient",
          "type": "string"
        }
      },
      "required": [
        "recipientName",
        "recipientIBAN"
      ]
    },
    "DocPricingMode": {
      "title": "DocPricingMode",
      "description": "amount in invoice items are net (excl VAT) or gross (incl VAT)",
      "type": "string",
      "enum": [
        "net",
        "gross"
      ]
    },
    "docStatus": {
      "title": "docStatus",
      "type": "string",
      "enum": [
        "all",
        "draft",
        "active",
        "stop",
        "error",
        "reject",
        "close"
      ]
    },
    "DocTotal": {
      "title": "DocTotal",
      "type": "object",
      "properties": {
        "amountText": {
          "description": "text for amount line (if non-standard)",
          "type": "string"
        },
        "amountValue": {
          "description": "total amount of all item lines",
          "type": "number",
          "format": "double"
        },
        "vatItems": {
          "description": "list of vat lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VatItem"
          }
        },
        "rounding": {
          "description": "0.05 rounding amount, if applicable",
          "type": "number",
          "format": "double"
        },
        "totalText": {
          "description": "Text for document total line, if non-standard",
          "type": "string"
        },
        "totalValue": {
          "description": "Total amount for document",
          "type": "number",
          "format": "double"
        },
        "termSkontoPercentage": {
          "description": "percentage for skonto discount",
          "type": "number",
          "format": "double"
        },
        "termSkontoDays": {
          "description": "days offered for skonto discount",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "amountValue",
        "totalValue"
      ]
    },
    "DocType": {
      "title": "DocType",
      "description": "type of document",
      "type": "string",
      "enum": [
        "invoice",
        "creditnote",
        "onlineorder",
        "paynote",
        "cancellation"
      ]
    },
    "EmailDelivery": {
      "title": "EmailDelivery",
      "description": "additional information for email delivery",
      "type": "object",
      "properties": {
        "fromMail": {
          "description": "mail address of sender (Billing Engine Config, if not indicated)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "fromName": {
          "description": "visualized name of sender (Billing Engine Config, if not indicated)",
          "type": "string"
        },
        "toMail": {
          "description": "mail address of recipient",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "ccList": {
          "description": "optional list of CC mail receivers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bccList": {
          "description": "optional list of bcc mail receivers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replyMail": {
          "description": "optional, fromMail if empty",
          "type": "string"
        }
      },
      "required": [
        "toMail"
      ]
    },
    "EmailType": {
      "title": "EmailType",
      "description": "type of email if email is defined, none otherwise",
      "type": "string",
      "enum": [
        "none",
        "to",
        "cc",
        "bcc"
      ]
    },
    "ErrorMode": {
      "title": "ErrorMode",
      "description": "area of error creation",
      "type": "string",
      "enum": [
        "none",
        "validation",
        "billingEngine",
        "templating",
        "printing",
        "eMail",
        "eBill",
        "other"
      ]
    },
    "EventType": {
      "title": "EventType",
      "type": "string",
      "enum": [
        "invoiceCreated",
        "creditNoteCreated",
        "payNoteCreated",
        "cancellationCreated",
        "paymentCreated",
        "paymentUpdated",
        "paymentDeleted"
      ]
    },
    "FileSource": {
      "title": "FileSource",
      "description": "source of attachment",
      "type": "string",
      "enum": [
        "sftp",
        "base64",
        "stored",
        "fromurl"
      ]
    },
    "FileType": {
      "title": "FileType",
      "description": "file type of attachment",
      "type": "string",
      "enum": [
        "pdf",
        "csv",
        "excel"
      ]
    },
    "General": {
      "title": "General",
      "description": "general information on document",
      "type": "object",
      "properties": {
        "docEmailResponse": {
          "description": "e-mail address for validation error response (admin mail)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "docSource": {
          "description": "Name of source business system (ex. Adsuite, goTom)",
          "type": "string"
        },
        "companyCode": {
          "description": "company code of sender (ex. C123)",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "docNum": {
          "description": "unique id of document (ex. InvoiceNum) as used by business unit (Billing Engine will add CompanyCode as Prefix, ex. C123-xxxx)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "docDate": {
          "description": "date of document",
          "type": "string",
          "format": "date"
        },
        "bookingDate": {
          "description": "booking date for GL postings, same as docDate if empty",
          "type": "string",
          "format": "date"
        },
        "docLanguage": {
          "$ref": "#/definitions/DocLanguage"
        },
        "docCurrency": {
          "$ref": "#/definitions/DocCurrency"
        },
        "docPricingMode": {
          "$ref": "#/definitions/DocPricingMode"
        },
        "docType": {
          "$ref": "#/definitions/DocType"
        },
        "docInvoice": {
          "$ref": "#/definitions/DocInvoice"
        },
        "docCreditNote": {
          "$ref": "#/definitions/DocCreditNote"
        },
        "docPayNote": {
          "$ref": "#/definitions/DocPayNote"
        },
        "docOnlineOrder": {
          "$ref": "#/definitions/DocOnlineOrder"
        },
        "docCancellation": {
          "$ref": "#/definitions/DocCancellation"
        }
      },
      "required": [
        "docEmailResponse",
        "companyCode",
        "docNum",
        "docDate",
        "docType"
      ]
    },
    "General1": {
      "title": "General1",
      "description": "general information on document",
      "type": "object",
      "properties": {
        "docEmailResponse": {
          "description": "e-mail address for validation error response (admin mail)",
          "type": "string"
        },
        "docNum": {
          "description": "Unique identifier, provided by the Business Unit",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "companyCode": {
          "description": "company code of sender (ex. C123)",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "bookingDate": {
          "description": "accounting date for revenue item",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "docNum",
        "bookingDate"
      ]
    },
    "General2": {
      "title": "General2",
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "company code of sender (ex. C123)",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "docNum": {
          "description": "unique id of document (ex. InvoiceNum) as used by business unit",
          "type": "string",
          "pattern": "\\S{1,}"
        }
      }
    },
    "Group": {
      "title": "Group",
      "type": "object",
      "properties": {
        "groupTitle": {
          "description": "title description for group of line items",
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "groupTotal": {
          "$ref": "#/definitions/GroupTotal"
        }
      }
    },
    "GroupTotal": {
      "title": "GroupTotal",
      "type": "object",
      "properties": {
        "totalText": {
          "description": "text for group total line (if non standard)",
          "type": "string"
        },
        "totalAmount": {
          "description": "group total amount",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "totalAmount"
      ]
    },
    "InfoItem": {
      "title": "InfoItem",
      "type": "object",
      "properties": {
        "infoTitle": {
          "description": "title text for InfoItem",
          "type": "string"
        },
        "infoText": {
          "description": "multi line text for InfoItem",
          "type": "string"
        }
      }
    },
    "InvoiceType": {
      "title": "InvoiceType",
      "description": "type of invoice",
      "type": "string",
      "enum": [
        "standard",
        "barter",
        "offer",
        "inter",
        "intra",
        "cash",
        "prepayment"
      ]
    },
    "ItemsTitles": {
      "title": "ItemsTitles",
      "type": "object",
      "properties": {
        "titlePos": {
          "description": "title for num column (if non-standard)",
          "type": "string"
        },
        "titleCode": {
          "description": "title for code column (if non-standard)",
          "type": "string"
        },
        "titleText": {
          "description": "title for text column (if non-standard)",
          "type": "string"
        },
        "titleQuantity": {
          "description": "title for quantity column (if non-standard)",
          "type": "string"
        },
        "titleUnit": {
          "description": "title for unit column (if non-standard)",
          "type": "string"
        },
        "titlePrice": {
          "description": "title for price column (if non-standard)",
          "type": "string"
        },
        "titleDiscount": {
          "description": "title for discount column (if non-standard)",
          "type": "string"
        },
        "titleAmount": {
          "description": "title for total column (if non-standard)",
          "type": "string"
        },
        "titleVAT": {
          "description": "title for vat column (if non-standard)",
          "type": "string"
        }
      }
    },
    "Layout": {
      "title": "Layout",
      "description": "layout information for document & envelope",
      "type": "object",
      "properties": {
        "templateName": {
          "description": "name of base template",
          "example": "standard",
          "type": "string",
          "default": "standard"
        },
        "templateLogo": {
          "description": "filename of logo on template",
          "example": "standard",
          "type": "string",
          "default": "standard"
        },
        "paymentSlip": {
          "$ref": "#/definitions/PaymentSlip"
        },
        "envelopeLogo": {
          "description": "filename of jpg for envelope",
          "example": "standard",
          "type": "string",
          "default": "standard"
        },
        "emailSubject": {
          "description": "subject for email (if non standard)",
          "type": "string"
        },
        "emailBody": {
          "description": "body html text for email (if non standard)",
          "type": "string"
        },
        "bodyDocType": {
          "$ref": "#/definitions/BodyDocType"
        },
        "bodyDocBase64": {
          "description": "document body base64 encoded, for doctype = base64 (pdf/a format, without payment slip page)",
          "type": "string"
        },
        "bodyDocFilename": {
          "description": "filename on sftp server, for doctype = sidepdf (pdf/a format, without payment slip page)",
          "type": "string"
        },
        "bodyDocURL": {
          "description": "url of document on TX DMS, for doctype = fromurl (pdf/a format, without payment slip page)",
          "type": "string"
        }
      }
    },
    "LineItem": {
      "title": "LineItem",
      "type": "object",
      "properties": {
        "posNum": {
          "description": "number of line item (ex: 1,02,3b)",
          "type": "string"
        },
        "posTitle": {
          "description": "title of product/service",
          "type": "string"
        },
        "posText": {
          "description": "additional description lines for line item",
          "type": "string"
        },
        "quantityText": {
          "description": "text representation of quantity (overrides decimal representation if non blank)",
          "type": "string"
        },
        "quantityValue": {
          "description": "quantity decimal value",
          "type": "number",
          "format": "double"
        },
        "priceText": {
          "description": "text representation of price (overrides decimal representation if non blank)",
          "type": "string"
        },
        "priceValue": {
          "description": "price per unit for line item",
          "type": "number",
          "format": "double"
        },
        "discountText": {
          "description": "discount text for unit",
          "type": "string"
        },
        "discountValue": {
          "description": "discount value for unit",
          "type": "number",
          "format": "double"
        },
        "amountValue": {
          "description": "price for line item after discount",
          "type": "number",
          "format": "double"
        },
        "vatCode": {
          "description": "VAT code for item (ex. 1,2,10)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "posBold": {
          "$ref": "#/definitions/PosBold"
        },
        "subLines": {
          "description": "additional sublines to invoice line item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubLine"
          }
        },
        "revenueItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RevenueItem"
          }
        }
      },
      "required": [
        "posTitle",
        "amountValue",
        "vatCode",
        "revenueItems"
      ]
    },
    "Operation": {
      "title": "Operation",
      "description": "operation to be executed",
      "type": "string",
      "enum": [
        "resend",
        "extend",
        "stop",
        "restart",
        "notcollect"
      ]
    },
    "Payload": {
      "title": "Payload",
      "description": "content information of document",
      "type": "object",
      "properties": {
        "docTitle": {
          "description": "title of document ex. Rechnung, Gutschrift (if non standard)",
          "type": "string"
        },
        "docHeaderTitle": {
          "$ref": "#/definitions/DocHeaderTitle"
        },
        "docHeader": {
          "$ref": "#/definitions/DocHeader"
        },
        "docHeaderText": {
          "description": "header text for document, if non-standard text",
          "type": "string"
        },
        "docBody": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocBody"
          }
        },
        "docTotal": {
          "$ref": "#/definitions/DocTotal"
        },
        "docFooter": {
          "$ref": "#/definitions/DocFooter"
        },
        "paymentSlip": {
          "$ref": "#/definitions/PaymentSlip1"
        }
      }
    },
    "PaymentSlip": {
      "title": "PaymentSlip",
      "description": "selection for payment slip",
      "type": "string",
      "enum": [
        "standard",
        "no",
        "ESR",
        "QRcode"
      ]
    },
    "PaymentSlip1": {
      "title": "PaymentSlip1",
      "type": "object",
      "properties": {
        "slipText": {
          "description": "specific text for payment slip (if non standard)",
          "type": "string"
        }
      }
    },
    "paymentStatus": {
      "title": "paymentStatus",
      "type": "string",
      "enum": [
        "all",
        "open",
        "paid"
      ]
    },
    "PayMode": {
      "title": "PayMode",
      "description": "payout mode for paynote",
      "type": "string",
      "enum": [
        "paynow",
        "paydelay",
        "pay@date",
        "nopay",
        "manual"
      ]
    },
    "PayNoteType": {
      "title": "PayNoteType",
      "description": "type of paynote",
      "type": "string",
      "enum": [
        "standard",
        "barter",
        "inter",
        "intra"
      ]
    },
    "PosBold": {
      "title": "PosBold",
      "description": "specification for display in bold",
      "type": "string",
      "enum": [
        "noBold",
        "titleTotal",
        "topLine",
        "allLines"
      ]
    },
    "PostageType": {
      "title": "PostageType",
      "description": "postage type for postal delivery",
      "type": "string",
      "enum": [
        "A",
        "B1",
        "B2"
      ]
    },
    "PostalDelivery": {
      "title": "PostalDelivery",
      "description": "additional information for postal delivery",
      "type": "object",
      "properties": {
        "printingFee": {
          "$ref": "#/definitions/PrintingFee"
        },
        "postageType": {
          "$ref": "#/definitions/PostageType"
        },
        "postageGroup": {
          "description": "group by doctype & customer (YES/no)",
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "PrimaryChannel": {
      "title": "PrimaryChannel",
      "description": "primary delivery channel for document",
      "type": "string",
      "enum": [
        "print",
        "eMail",
        "eBill"
      ]
    },
    "PrintingFee": {
      "title": "PrintingFee",
      "description": "add printing fee (standard = by BillingEngine rules)",
      "type": "string",
      "enum": [
        "standard",
        "no",
        "yes"
      ]
    },
    "Process": {
      "title": "Process",
      "type": "object",
      "properties": {
        "create": {
          "description": "create pdf version of document (YES/no)",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "archive": {
          "description": "create archive version of document (YES/no)",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "delivery": {
          "$ref": "#/definitions/Delivery"
        },
        "test": {
          "description": "process document in test mode with no real bookings (yes/NO)",
          "example": false,
          "type": "boolean",
          "default": false
        }
      }
    },
    "Recipient": {
      "title": "Recipient",
      "description": "recient adresses for document",
      "type": "object",
      "properties": {
        "debtorCRMID": {
          "description": "customer ID for collectable debtor, with 3-digit prefix to identify customer database (ex. GOB-xxxx)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "debtorShowId": {
          "description": "customer ID to be indicated in documents, usually the ID used by the Business unit system",
          "type": "string"
        },
        "debtorSwissUID": {
          "description": "Swiss company code (UID), if any",
          "type": "string"
        },
        "customGroup": {
          "$ref": "#/definitions/CustomGroup"
        },
        "debtorShowAlways": {
          "description": "always show debtor & billing address, even if same",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "debtorTitle": {
          "description": "title for debtor, if non standard",
          "type": "string"
        },
        "debtorAddress": {
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address"
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address"
        }
      },
      "required": [
        "debtorCRMID"
      ]
    },
    "ReductionType": {
      "title": "ReductionType",
      "description": "type of reduction (if discount > 0)",
      "type": "string",
      "enum": [
        "discount",
        "remissions",
        "commissions",
        "otherReduction",
        "fees"
      ]
    },
    "RejectMode": {
      "title": "RejectMode",
      "description": "channel for reject mode",
      "type": "string",
      "enum": [
        "none",
        "SwissPost",
        "eMail",
        "eBill",
        "other"
      ]
    },
    "ResendChannel": {
      "title": "ResendChannel",
      "type": "string",
      "enum": [
        "print",
        "eMail"
      ]
    },
    "ResendDocType": {
      "title": "ResendDocType",
      "description": "original doc to be resent or reminder",
      "type": "string",
      "enum": [
        "document",
        "reminder"
      ]
    },
    "ResendPostageType": {
      "title": "ResendPostageType",
      "type": "string",
      "enum": [
        "A",
        "B1",
        "B2"
      ]
    },
    "RevenueItem": {
      "title": "RevenueItem",
      "type": "object",
      "properties": {
        "salesItem": {
          "description": "workday sales item, mandatory (ex. SAI1234)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "purchaseItem": {
          "description": "workday purachase item, mandatory",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "revenueCategory": {
          "description": "workday revenue category (ex. RC0123)",
          "type": "string"
        },
        "spendCategory": {
          "description": "workday spend cateogory (ex. SC075)",
          "type": "string"
        },
        "activity": {
          "description": "workday activity (ex. AC0422)",
          "type": "string"
        },
        "subActivity": {
          "description": "workday subactivity (ex. SA0646)",
          "type": "string"
        },
        "itemCategory": {
          "description": "workday item category (ex. HIC0031)",
          "type": "string"
        },
        "costCenter": {
          "description": "Workday cost center",
          "type": "string"
        },
        "project": {
          "description": "Workday project",
          "type": "string"
        },
        "campaign": {
          "description": "Workdy campaign",
          "type": "string"
        },
        "revenueAmount": {
          "description": "revenue amount (optional, amountValue if not indicated)",
          "type": "number",
          "format": "double"
        },
        "revenueDiscount": {
          "description": "discount amount (if any)",
          "type": "number",
          "format": "double"
        },
        "reductionType": {
          "$ref": "#/definitions/ReductionType"
        },
        "revenueTotal": {
          "description": "revenue total (amount-discount)",
          "type": "number",
          "format": "double"
        },
        "periodFrom": {
          "description": "revenue period starting date (optional, bookingDate if not indicated)",
          "type": "string",
          "format": "date"
        },
        "periodTo": {
          "description": "revenue period end date (optional, bookingDate if not indicated)",
          "type": "string",
          "format": "date"
        },
        "icCostCenter": {
          "description": "Intercompany cost center",
          "type": "string"
        },
        "icProject": {
          "description": "Intercompany project",
          "type": "string"
        },
        "icCampaign": {
          "description": "Intercompany campaign",
          "type": "string"
        },
        "icActivityAffiliate": {
          "description": "Intercompany activity affiliate",
          "type": "string"
        }
      },
      "required": [
        "salesItem"
      ]
    },
    "RevenueItem1": {
      "title": "RevenueItem1",
      "type": "object",
      "properties": {
        "docCurrency": {
          "description": "currency for item (CHF, EUR, USD, GBP)",
          "example": "CHF",
          "type": "string",
          "default": "CHF",
          "minLength": 3,
          "maxLength": 3
        },
        "salesItem": {
          "description": "workday sales item (ex. SAI1234)",
          "type": "string",
          "pattern": "\\S{1,}"
        },
        "revenueCategory": {
          "description": "workday revenue category (ex. RC0123)",
          "type": "string"
        },
        "activity": {
          "description": "workday activity (ex. AC0422)",
          "type": "string"
        },
        "subActivity": {
          "description": "workday sub activity (ex. SA0646)",
          "type": "string"
        },
        "itemCategory": {
          "description": "workday item category (ex. IC00031)",
          "type": "string"
        },
        "revenueAmount": {
          "description": "revenue amount",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "discount amount (if any)",
          "type": "number",
          "format": "double"
        },
        "reductionType": {
          "$ref": "#/definitions/ReductionType"
        },
        "netAmount": {
          "description": "net amount (revenue-discount)",
          "type": "number",
          "format": "double"
        },
        "customGroup": {
          "$ref": "#/definitions/CustomGroup1"
        }
      },
      "required": [
        "salesItem",
        "revenueAmount"
      ]
    },
    "Sender": {
      "title": "Sender",
      "description": "sender of the document",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "senderText": {
          "description": "sender address for document header",
          "type": "string"
        },
        "vatNumber": {
          "description": "VAT number of sender",
          "type": "string"
        },
        "contactTitle": {
          "$ref": "#/definitions/ContactTitle"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "senderBank": {
          "description": "Sender bank name",
          "type": "string"
        },
        "senderBIC": {
          "description": "Sender bank bic",
          "type": "string"
        },
        "senderIBAN": {
          "description": "Sender IBAN (ex. CH11 2222 3333 4444 5555)",
          "type": "string"
        }
      }
    },
    "StatusMode": {
      "title": "StatusMode",
      "description": "status of document in workflow",
      "type": "string",
      "enum": [
        "draft",
        "active",
        "stop",
        "error",
        "reject",
        "close"
      ]
    },
    "StopMode": {
      "title": "StopMode",
      "description": "why document is stopped",
      "type": "string",
      "enum": [
        "none",
        "manuStop",
        "autoStop",
        "collectionStop"
      ]
    },
    "stopMode1": {
      "title": "stopMode1",
      "type": "string",
      "enum": [
        "all",
        "autoStop",
        "manuStop",
        "collectionStop"
      ]
    },
    "SubLine": {
      "title": "SubLine",
      "type": "object",
      "properties": {
        "subTitle": {
          "type": "string"
        },
        "quantityText": {
          "type": "string"
        },
        "quantityValue": {
          "type": "number",
          "format": "double"
        },
        "priceText": {
          "type": "string"
        },
        "priceValue": {
          "type": "number",
          "format": "double"
        },
        "discountText": {
          "type": "string"
        },
        "discountValue": {
          "type": "number",
          "format": "double"
        },
        "amountValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "VatItem": {
      "title": "VatItem",
      "type": "object",
      "properties": {
        "vatCode": {
          "description": "vat code (ex. 1,2,3)",
          "type": "string"
        },
        "vatRate": {
          "description": "vat rate (ex. 7.7 / 2.5 / 0.0)",
          "type": "number",
          "format": "double"
        },
        "periodFrom": {
          "description": "vat period start date (skip, if not applicable)",
          "type": "string",
          "format": "date"
        },
        "periodTo": {
          "description": "vat period end date (skip, if not applicable)",
          "type": "string",
          "format": "date"
        },
        "netAmount": {
          "description": "total amount excluding vat",
          "type": "number",
          "format": "double"
        },
        "vatAmount": {
          "description": "calculated vat amount",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "vatCode",
        "vatRate"
      ]
    },
    "Workflow": {
      "title": "Workflow",
      "description": "Workflow configuration for document",
      "type": "object",
      "properties": {
        "workflowName": {
          "description": "name of workflow plan",
          "example": "standard",
          "type": "string",
          "default": "standard"
        },
        "termToPay": {
          "description": "payment terms for invoice (optional, overwrites workflow specification)",
          "type": "integer",
          "format": "int32"
        },
        "collectionStop": {
          "description": "stop process before collection (optional, overwrites workflow specification)",
          "example": false,
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "security": [
    {
      "auth": []
    }
  ],
  "tags": [
    {
      "name": "BillingDoc"
    },
    {
      "name": "RevenueAccruals"
    },
    {
      "name": "Interactions"
    }
  ]
}